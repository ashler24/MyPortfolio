{"version":3,"sources":["components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/AboutComponent.js","components/ContactComponent.js","shared/biodata.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","toggleNav","bind","state","isNavOpen","this","setState","Fragment","Navbar","expand","className","id","NavbarToggler","onClick","NavbarBrand","Collapse","isOpen","navbar","Nav","NavItem","to","Component","Footer","ProfileCard","bdata","src","image","height","width","name","title","href","Portfolio","Progressweb","Progress","animated","color","value","Home","biodata","About","Toast","ToastHeader","ToastBody","Contact","class","BIODATA","company","designation","hobbies","Main","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5e7fff05.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport {Nav,Navbar,NavbarBrand,NavbarToggler,Collapse,NavItem} from 'reactstrap'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nclass Header extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.state = {\r\n            isNavOpen:false\r\n        }\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar expand=\"md\">\r\n                    <div className=\"container\" id=\"navbar-body\">\r\n                        <NavbarToggler onClick={this.toggleNav}/>\r\n                        <NavbarBrand className=\"Navbar-Brand mr-auto\">Abhijeet Pawar</NavbarBrand>    \r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar className=\"ml-auto text-bold\">\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutme\">About Me</NavLink>\r\n                                </NavItem>\r\n\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactme\">Contact Me</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>                \r\n                    </div>\r\n                </Navbar>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-centre\">\r\n                    <div className=\"col-auto\">\r\n                        <legend>Â© Copyright 2020  Abhijeet Pawar</legend>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Progress } from 'reactstrap'\r\nimport { ImTwitter,ImGithub,ImLocation } from \"react-icons/im\";\r\n\r\n\r\n\r\n\r\n\r\nfunction ProfileCard({ bdata }) {\r\n\r\n    if (bdata != null) {\r\n        return (\r\n\r\n            <div>\r\n                <img className=\"round shade\" src={bdata.image} height=\"150\" width=\"150\" />\r\n                <div className=\"col-12\">\r\n                    <h1 className=\"text-thinner\">{bdata.name}</h1>\r\n                    <p className=\"text-uppercase text-wide margin\">Project Engineer</p>\r\n                    <p className=\"margin\">\r\n                    When I'm not at my computer, I like to do yoga and read books.\r\n           \r\n                    </p>\r\n                    <p className=\"margin\">\r\n                        \r\n                        <a title=\"Location\" href=\"#\"><ImLocation />&nbsp;Pune, MH</a>&nbsp;&nbsp;\r\n                        <a title=\"Twitter\" href=\"https://twitter.com/pawar2467\"><ImTwitter />&nbsp;Abhijeet Pawar</a>&nbsp;&nbsp;\r\n                        <a title=\"GitHub\" href=\"https://github.com/ashler24\"><ImGithub />&nbsp;ashler24</a>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction Portfolio() {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div id=\"skills\" className=\"row border-top\">\r\n                <div className=\"offset-1\">\r\n                    <h4>Specialty</h4>\r\n                    <ul>\r\n                        <li>Java Programming</li>\r\n                        <li>Web App Development</li>\r\n                    </ul>\r\n                    </div>\r\n                    <div className=\"offset-1\">\r\n                    <h4>Skills</h4>\r\n                    <p>\r\n                        <code>Java</code>\r\n                        <code>JavaScript</code>\r\n                        <code>Angular</code>\r\n                        <code>React</code>\r\n                        <code>MySQL</code>\r\n                        <code>MongoDB</code>\r\n                        <code>Docker</code>\r\n                        <code>Git</code>\r\n                        <code>GitHub</code>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div id=\"experience\" className=\"row\">\r\n                <div className=\"offset-1\"><hr className=\"margin-none\"/></div>\r\n                <div className=\"col-12\">\r\n                <h2>Experience</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                <h4>\r\n                    <a title=\"CDAC R&D\" href=\"https://www.cdac.in/\">CDAC, R&D.</a> - Project Engineer\r\n                </h4>\r\n                <p>\r\n                    Pune, MH - <i>Febuary 2020 - Current</i> (1 year)<br/>\r\n                  \r\n                    <code className=\"text-small\">Java</code>\r\n                    <code className=\"text-small\">Oracle</code>\r\n                    <code className=\"text-small\">SpringMVC</code>\r\n                    <code className=\"text-small\">J2EE</code>\r\n                </p>\r\n            </div>\r\n        </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nfunction Progressweb() {\r\n    return (\r\n        <div>\r\n            <Progress animated color=\"info\" value={50}>Development still in progress....!!</Progress>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Home = (props) => {\r\n\r\n    //first check if props is not empty\r\n    if (props.biodata != null) {\r\n        return (\r\n\r\n            <div className=\"container text-center\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <ProfileCard bdata={props.biodata} />\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <Portfolio />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <Progressweb />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div>nothing</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Toast, ToastBody, ToastHeader } from 'reactstrap';\r\n\r\n\r\nexport default function About() {\r\n\r\n    return (\r\n        <div className=\"container text-center\">\r\n           \r\n    \r\n            <div className=\"p-3 bg-primary my-2 rounded\">\r\n                <Toast>\r\n                    <ToastHeader>\r\n                        Coding\r\n                    </ToastHeader>\r\n                    <ToastBody>\r\n                        â¯ I'm a Developer / Thinker / Creator / Learner\r\n                    </ToastBody>\r\n                </Toast>\r\n            </div>\r\n                    \r\n               \r\n            <div className=\"p-3 bg-secondary my-2 rounded\">\r\n                    <Toast>\r\n                        <ToastHeader>\r\n                            Seeker\r\n                        </ToastHeader>\r\n                    <ToastBody>\r\n                        ð± Learning new things everyday.\r\n                    </ToastBody>\r\n                </Toast>\r\n            </div>\r\n\r\n            \r\n            <div className=\"p-3 bg-success my-2 rounded\">\r\n                <Toast>\r\n                    <ToastHeader>\r\n                        Photography\r\n              </ToastHeader>\r\n                    <ToastBody>\r\n                        ð· Love to take photos & edit them.\r\n              </ToastBody>\r\n                </Toast>\r\n            </div>\r\n            <div className=\"p-3 bg-danger my-2 rounded\">\r\n                <Toast>\r\n                    <ToastHeader>\r\n                        Science\r\n              </ToastHeader>\r\n                    <ToastBody>\r\n                        ð Science Enthusiast who loves to learn the mysteries about the Universe.\r\n              </ToastBody>\r\n                </Toast>\r\n            </div>\r\n            <div className=\"p-3 bg-warning my-2 rounded\">\r\n                <Toast>\r\n                    <ToastHeader>\r\n                        FullStack Developer\r\n              </ToastHeader>\r\n                    <ToastBody>\r\n                        ð¨âð» Full Stack developer who loves web development.\r\n              </ToastBody>\r\n                </Toast>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport {ImTwitter,ImGithub,ImLinkedin, ImInstagram} from 'react-icons/im'\r\n\r\nfunction Contact() {\r\n    return (\r\n        <div>\r\n            <div id=\"contact\" className=\"row section\">\r\n                <div className=\"offset-4\"><hr class=\"padding-bottom-large margin-none\"/></div>\r\n                    <div className=\"\">\r\n                        <h2 className=\"text-center\">Contact</h2>\r\n                        <p className=\"text-center text-medium\">\r\n                            <a title=\"Twitter\" href=\"https://twitter.com/pawar2467\"><ImTwitter /></a>&nbsp;&nbsp;\r\n                            <a title=\"LinkedIn\" href=\"https://www.linkedin.com/in/abhijeet-pawar-b96237130/\"><ImLinkedin /></a>&nbsp;&nbsp;\r\n                            <a title=\"GitHub\" href=\"https://github.com/ashler24\"><ImGithub /></a>&nbsp;&nbsp;\r\n                            <a title=\"instagram\" href=\"https://instagram.com/lone_w_olf\"><ImInstagram /></a>\r\n                        </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;","export const BIODATA = [\r\n    {\r\n        id:0,\r\n        name:\"Abhijeet Pawar\",\r\n        company:\"CDAC R&D\",\r\n        designation:\"Project Engineer\",\r\n        hobbies:[\"Reading\",\"Playing Games\",\"Yoga\"],\r\n        image:'assets/images/profilepic.jpg'\r\n\r\n    }\r\n]","import React,{Component} from 'react';\r\nimport Header from './HeaderComponent'\r\nimport Footer from './FooterComponent'\r\nimport Home from './HomeComponent'\r\nimport About from './AboutComponent'\r\nimport Contact from './ContactComponent'\r\nimport { BIODATA } from '../shared/biodata'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            biodata:BIODATA\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path=\"/home\" component={()=><Home biodata={this.state.biodata[0]}/>} />\r\n                    <Route path=\"/aboutme\" component={About} />\r\n                    <Route path=\"/contactme\" component={Contact} />\r\n                    <Redirect to=\"/home\"/>\r\n                </Switch>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport Main from './components/MainComponent.js'\nimport {HashRouter} from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <div>\n        <Main />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'osseous/docs/3.0.0/osseous.min.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}