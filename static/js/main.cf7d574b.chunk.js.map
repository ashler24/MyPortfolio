{"version":3,"sources":["components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/AboutComponent.js","components/ContactComponent.js","shared/biodata.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","toggleNav","bind","state","isNavOpen","this","setState","Fragment","Navbar","dark","expand","className","NavbarToggler","onClick","NavbarBrand","Collapse","isOpen","navbar","Nav","NavItem","to","Component","Footer","ProfileCard","bdata","Card","key","id","CardImg","top","src","image","alt","name","CardBody","CardTitle","CardText","company","designation","Portfolio","Jumbotron","Progressweb","Progress","animated","color","value","Home","biodata","About","Toast","ToastHeader","ToastBody","Contact","target","href","align","width","BIODATA","hobbies","Main","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cf7d574b.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport {Nav,Navbar,NavbarBrand,NavbarToggler,Collapse,NavItem} from 'reactstrap'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nclass Header extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.state = {\r\n            isNavOpen:false\r\n        }\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav}/>\r\n                        <NavbarBrand className=\"Navbar-Brand mr-auto\">Abhijeet Pawar</NavbarBrand>    \r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar className=\"ml-auto\">\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutme\">About Me</NavLink>\r\n                                </NavItem>\r\n\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactme\">Contact Me</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>                \r\n                    </div>\r\n                </Navbar>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-centre\">\r\n                    <div className=\"col-auto\">\r\n                        <legend>Â© Copyright 2020  Abhijeet Pawar</legend>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Jumbotron, Progress } from 'reactstrap'\r\n\r\n\r\n\r\n\r\nfunction ProfileCard({ bdata }) {\r\n\r\n    if (bdata != null) {\r\n        return (\r\n\r\n            <Card key={bdata.id} className=\"Card-Color\">\r\n                <CardImg top src={bdata.image} alt={bdata.name} />\r\n                <CardBody>\r\n                    <CardTitle className=\"Card-Title\">{bdata.name}</CardTitle>\r\n                    <CardText className=\"cardtext\">\r\n                        {bdata.company}\r\n                    </CardText>\r\n                    <CardText className=\"cardtext\">\r\n                        {bdata.designation}\r\n                    </CardText>\r\n                </CardBody>\r\n            </Card>\r\n\r\n\r\n\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction Portfolio() {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Jumbotron>\r\n                <h1 className=\"display-3\">Hello, world!</h1>\r\n                <p className=\"lead\">I am a Web Developer.</p>\r\n                <hr className=\"my-2\" />\r\n  \r\n\r\n            </Jumbotron>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nfunction Progressweb(){\r\n    return(\r\n    <div>\r\n        <Progress animated color=\"info\" value={50}>Development still in progress....!!</Progress>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nconst Home = (props) => {\r\n\r\n    //first check if props is not empty\r\n    if (props.biodata != null) {\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-md-5 col-sm-6 m-1\">\r\n                        <ProfileCard bdata={props.biodata} />\r\n                    </div>\r\n                    <div className=\"col-6 col-md col-sm m-1\">\r\n                        <Portfolio />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 m-1\">\r\n                        <Progressweb />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div>nothing</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Toast, ToastBody, ToastHeader } from 'reactstrap';\r\n\r\n\r\nexport default function About() {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-4 col-md-6 col-sm\">\r\n                        <div className=\"p-3 bg-primary my-2 rounded\">\r\n                            <Toast>\r\n                                <ToastHeader>\r\n                                    Coding\r\n                                </ToastHeader>\r\n                                <ToastBody>\r\n                                    â¯ I'm a Developer / Thinker / Creator / Learner\r\n                                </ToastBody>\r\n                            </Toast>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-4\"></div>\r\n                    <div className=\"col-4\"></div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-4\"></div>\r\n                    <div className=\"col-4 col-md-6 col-sm\">\r\n                    <div className=\"p-3 bg-secondary my-2 rounded\">\r\n                    <Toast>\r\n                        <ToastHeader>\r\n                            Seeker\r\n                        </ToastHeader>\r\n                    <ToastBody>\r\n                        ð± Learning new things everyday.\r\n                    </ToastBody>\r\n                </Toast>\r\n            </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-4\"></div>\r\n\r\n                </div>\r\n                <div className=\"row\"></div>\r\n                <div className=\"row\"></div>\r\n                <div className=\"row\"></div>\r\n            </div>\r\n\r\n            \r\n            \r\n            <div className=\"p-3 bg-success my-2 rounded\">\r\n                <Toast>\r\n                    <ToastHeader>\r\n                        Photography\r\n              </ToastHeader>\r\n                    <ToastBody>\r\n                        ð· Love to take photos & edit them.\r\n              </ToastBody>\r\n                </Toast>\r\n            </div>\r\n            <div className=\"p-3 bg-danger my-2 rounded\">\r\n                <Toast>\r\n                    <ToastHeader>\r\n                        Science\r\n              </ToastHeader>\r\n                    <ToastBody>\r\n                        ð Science Enthusiast who loves to learn the mysteries about the Universe.\r\n              </ToastBody>\r\n                </Toast>\r\n            </div>\r\n            <div className=\"p-3 bg-warning my-2 rounded\">\r\n                <Toast>\r\n                    <ToastHeader>\r\n                        FullStack Developer\r\n              </ToastHeader>\r\n                    <ToastBody>\r\n                        ð¨âð» Full Stack developer who loves web development.\r\n              </ToastBody>\r\n                </Toast>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport { Card, CardText, CardBody, CardTitle } from 'reactstrap'\r\n\r\nfunction Contact() {\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-centre\">\r\n                    <div className=\"col-6 col-md-6\">\r\n                        <Card>\r\n                            <CardTitle>Contact Me</CardTitle>\r\n                            <CardBody>\r\n                                <CardText>\r\n                                    <a target=\"_blank\" href=\"https://twitter.com/pawar2467\">\r\n                                        <img align=\"left\" alt=\"Abhijeet Pawar | Twitter\" width=\"25px\" src=\"https://raw.githubusercontent.com/Akshay2996/Akshay2996/master/assets/twitter.png\" />\r\n                                    </a>\r\n                                    <a target=\"_blank\" href=\"https://www.instagram.com/lone_w_olf/\">\r\n                                        <img align=\"left\" alt=\"Abhijeet Pawar | Instagram\" width=\"25px\" src=\"https://raw.githubusercontent.com/Akshay2996/Akshay2996/master/assets/instagram.png\" />\r\n                                    </a>\r\n                                    <a target=\"_blank\" href=\"https://www.linkedin.com/in/abhijeet-pawar-b96237130/\">\r\n                                        <img align=\"left\" alt=\"Abhijeet Pawar | LinkedIn\" width=\"25px\" src=\"https://raw.githubusercontent.com/Akshay2996/Akshay2996/master/assets/linkedin.png\" />\r\n                                    </a>\r\n                                </CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;","export const BIODATA = [\r\n    {\r\n        id:0,\r\n        name:\"Abhijeet Pawar\",\r\n        company:\"CADC R&D\",\r\n        designation:\"Project Engineer\",\r\n        hobbies:[\"Reading\",\"Playing Games\",\"Yoga\"],\r\n        image:'MyPortfolio/assets/images/profilepic.jpg'\r\n\r\n    }\r\n]","import React,{Component} from 'react';\r\nimport Header from './HeaderComponent'\r\nimport Footer from './FooterComponent'\r\nimport Home from './HomeComponent'\r\nimport About from './AboutComponent'\r\nimport Contact from './ContactComponent'\r\nimport { BIODATA } from '../shared/biodata'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            biodata:BIODATA\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path=\"/home\" component={()=><Home biodata={this.state.biodata[0]}/>} />\r\n                    <Route path=\"/aboutme\" component={About} />\r\n                    <Route path=\"/contactme\" component={Contact} />\r\n                    <Redirect to=\"/home\"/>\r\n                </Switch>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport Main from './components/MainComponent.js'\nimport {BrowserRouter} from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Main />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}